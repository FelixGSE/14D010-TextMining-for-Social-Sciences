tikz("exectime.tex",width = 5, height = 5)
matplot(seq01,time02,xlab="Number of nodes",ylab='Execution time (in minutes)',type='l',lty=2,
lwd = 3,col=pers.blue)
dev.off()
tikz("exectime.tex",width = 5, height = 5)
matplot(seq01,time02,xlab="Number of nodes",ylab='Execution time (in minutes)',type='l',lty=2,
lwd = 3,col=pers.blue)
dev.off()
graph.density(get.graph)
length(nodes)
mean(rowSums(final.labels))
graph.density(g02)
dim(com.matrix)
mean(rowSums(com.matrix))
rowSums(com.matrix)
sum(com.matrix)
communities$clusters
com.matrix <- matrix(0,N,M)
for( i in 1:M){
temp.cluster <- communities$clusters[[i]]
com.matrix[temp.cluster,i] <- 1
}
com.matrix <- matrix(0,N,M)
for( i in 1:M){
temp.cluster <- communities$clusters[i]
com.matrix[temp.cluster,i] <- 1
}
communities$clusters[i]
communities$clusters[2]
communities$clusters[3]
communities$clusters[i][1]
unlist(communities$clusters[i])
com.matrix <- matrix(0,N,M)
for( i in 1:M){
temp.cluster <- unlist(communities$clusters[i])
com.matrix[temp.cluster,i] <- 1
}
rename.nodes[ind01]
rename.nodes
nodes <- V(g02):names
nodes <- V(g02)$names
head(nodes)
nodes <- V(g02)$name
head(nodes)
nodes <- as.numeric(V(g02)$name)
head(nodes)
temp.cluster <- unlist(communities$clusters[i])
n <- length(temp.cluster)
for(j in 1:n){
ind01 <- which(nodes == temp.cluster[j] )
temp.cluster[j] <- rename.nodes[ind01]
}
temp.cluster[j]
ind01
which(nodes == temp.cluster[j] )
sum(nodes==61673)
temp.cluster
tail(sort(nodes))
which(nodes==61675)
which(nodes==61674)
which(nodes==61676)
which(nodes==61675)
length(nodes)
temp.cluster <- unlist(communities$clusters[2])
temp.cluster
which(nodes==44068)
which(nodes==80395)
for( 4 in 1:M){
temp.cluster <- unlist(communities$clusters[2])
n <- length(temp.cluster)
for(j in 1:n){
ind01 <- which(nodes == temp.cluster[j] )
temp.cluster[j] <- rename.nodes[ind01]
}
new.edge.list[i,1] <- rename.nodes
com.matrix[temp.cluster,i] <- 1
}
communities$clusters
which(nodes==13222)
nodes <- as.numeric(V(g02)$id)
head(nodes)
nodes <- as.numeric(V(g02)$ids)
head(nodes)
vcount(g02)
communities$numbers
communities$nodeclusters
clus[clus[,1]==1]
clus <- communities$nodeclusters
clus[clus[,1]==1]
clus[clus[,1]==20]
head(clus)
clus[clus[,1]==63976,]
clus[clus[,1]==70084,]
clus[,1]
unique(clus[,1])
length(unique(clus[,1]))
ncol(clus)
nrow(clus)
length(as.numeric(unique(clus[,1])))
test <- clust[order(clus[,1]),]
test <- clus[order(clus[,1]),]
head(test)
as.numeric(as.character(clus[,1]))
length(as.numeric(as.character(clus[,1])))
length(unique(as.numeric(as.character(clus[,1]))))
head(clus)
as.numeric(as.character(clus[,1]))
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
ind01
length(ind01)
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0) next
clus[i,1] <- rename.nodes[ind01]
}
head(clus)
nodes
head(nodes)
nodes <- as.numeric(V(g02)$names)
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0) next
clus[i,1] <- rename.nodes[ind01]
}
head(clus)
head(nodes)
nodes <- as.numeric(V(g02)$name)
head(nodes)
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0) next
clus[i,1] <- rename.nodes[ind01]
}
warning()
head(clus)
which(nodes == as.numeric(as.character(clus[i,1])) )
rename.nodes
head(nodes)
tail(nodes)
nodes <- as.numeric(V(g02)$name)
tail(nodes)
head(clus)
head(nodes)
clus <- communities$nodeclusters
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0){next}else{
clus[i,1] <- rename.nodes[ind01]
}
}
warning()
clus <- communities$nodeclusters
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0){
clus[i,1] <- clus[i,1]
}else{
clus[i,1] <- rename.nodes[ind01]
}
}
warnings()
clus <- communities$nodeclusters
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(nodes == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0){
clus[i,1] <- as.numeric(as.character(clus[i,1]))
}else{
clus[i,1] <- rename.nodes[ind01]
}
}
g <- erdos.renyi.game(100,p=0.1)
g <- getLinkCommunities(erdos.renyi.game(100,p=0.1))
g <- getLinkCommunities(get.edgelist(erdos.renyi.game(100,p=0.1)))
g$nodeclusters
g$clusters
communities$edgelist
head(communities$edgelist)
communities$hclust
head(communities$edgelist[,1])
head(unique(communities$edgelist[,1]))
communities$nodeclusters
head(communities$nodeclusters)
sum(unique(communities$edgelist[,1]) == '63976')
sum(unique(communities$edgelist[,1]) == '20')
head(unique(communities$edgelist[,1]))
head(communities$nodeclusters)
sum(unique(communities$edgelist[,1]) == '63976')
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(unique(communities$edgelist[,1]) == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0){
clus[i,1] <- as.numeric(as.character(clus[i,1]))
}else{
clus[i,1] <- rename.nodes[ind01]
}
}
warning()
newlist <- c()
length(rename.nodes)
length(unique(communities$edgelist[,1]))
length(c(unique(communities$edgelist[,1]),unique(communities$edgelist[,2])))
length(unique(c(communities$edgelist[,1])communities$edgelist[,2]))))
length(unique(c(communities$edgelist[,1])communities$edgelist[,2])))
length(unique(c(communities$edgelist[,1]),communities$edgelist[,2])))
length(unique(c(communities$edgelist[,1]),communities$edgelist[,2]))))
length(unique(c(communities$edgelist[,1]),communities$edgelist[,2]))
V(communities$igraph)$name
as.numeric(V(communities$igraph)$name)
length(as.numeric(V(communities$igraph)$name))
sort(s.numeric(V(communities$igraph)$name))
sort(numeric(V(communities$igraph)$name))
sort(as.numeric(V(communities$igraph)$name))
clus <- communities$nodeclusters
newlist <- c()
for( i in 1:nrow(clus)){
cat('\rComputing for i =', i)
ind01 <- which(sort(as.numeric(V(communities$igraph)$name)) == as.numeric(as.character(clus[i,1])) )
if(length(ind01)==0){
newlist <- c(newlist,as.numeric(as.character(clus[i,1])))
}else{
newlist <- c(newlist,rename.nodes[ind01])
}
}
head(newlist)
length(newlist)
new.mat <- cbind(newlist,clus[,2])
M2 <- unique(new.mat[,2])
M2
M2 <- length(unique(new.mat[,2]))
M2
length(communities$clusters)
vcount(g02)
matt <- matrix(0,6819,M2)
dim(new.mat)
temp <- new.mat[new.mat[,2]==i,]
head(temp)
temp <- new.mat[new.mat[,2]==1,]
head(temp)
new.mat[new.mat[,2]==1,][,1]
for( i in 1:M2){
temp <- new.mat[new.mat[,2]==1,][,1]
matt[temp,i] <- 1
}
for( i in 1:M2){
temp <- new.mat[new.mat[,2]==i,][,1]
matt[temp,i] <- 1
}
sum(matt)
dim(matt)
new.mat[new.mat[,2]==2,][,1]
write.table(matt,file = "new_communities.csv",col.names = FALSE,row.names = FALSE,sep=",")
rowSums(matt)
length(new.mat[new.mat[,2]==5887,][,1])
length(new.mat[new.mat[,2]==5893,][,1])
length(new.mat[new.mat[,2]==5894,][,1])
length(new.mat[new.mat[,2]==5892,][,1])
mean(rowSums(matt))
# Set general file path
setwd('~/Documents/GSE/Term 3/14D010 Text Mining for Social Sciences/14D010-TextMining-for-Social-Sciences/Project/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
if (!require("rjson"))        install.packages("rjson");        library(rjson)
if (!require("tikzDevice"))   install.packages("tikzDevice");   library(tikzDevice)
if (!require("nnet"))         install.packages("nnet");         library(nnet)
### Get auxilliary functions
### Reset wd to report
setwd('TeX/Pictures/')
# Color Set
co <- 1/255
pers.green      <- rgb( co *  14 ,  co * 105 , co *  90 )
pers.blue       <- rgb( co *  22 ,  co *  54 , co *  92 )
pers.red        <- rgb( co *  99 ,  co *  37 , co *  35 )
pers.gray       <- rgb( co * 150 ,  co * 150 , co * 150 )
pers.orange     <- rgb( co * 186 ,  co *  85 , co *  59 )
pers.beige      <- rgb( co * 196 ,  co * 189 , co * 151 )
full.color.set  <- list( pers.green , pers.blue, pers.red,
pers.gray, pers.orange, pers.beige
)
################################################################################
################################################################################
top   <- read.csv('top10.csv',header = TRUE)
N01   <- nrow(top)
M01   <- ncol(top)
rownames(top) <- top[,1]
colnames(top) <- c('NONE','nothing','gold','platinum','rowsum')
top5 <- t(as.matrix(tail(top)[,2:(M01-1)]))[1:3,]
setwd('~/Documents/GSE/Term 3/14D010 Text Mining for Social Sciences/14D010-TextMining-for-Social-Sciences/Project/')
### Load Packages
if (!require("RColorBrewer")) install.packages("RColorBrewer"); library(RColorBrewer)
if (!require("rjson"))        install.packages("rjson");        library(rjson)
if (!require("tikzDevice"))   install.packages("tikzDevice");   library(tikzDevice)
if (!require("nnet"))         install.packages("nnet");         library(nnet)
### Get auxilliary functions
# Color Set
co <- 1/255
pers.green      <- rgb( co *  14 ,  co * 105 , co *  90 )
pers.blue       <- rgb( co *  22 ,  co *  54 , co *  92 )
pers.red        <- rgb( co *  99 ,  co *  37 , co *  35 )
pers.gray       <- rgb( co * 150 ,  co * 150 , co * 150 )
pers.orange     <- rgb( co * 186 ,  co *  85 , co *  59 )
pers.beige      <- rgb( co * 196 ,  co * 189 , co * 151 )
full.color.set  <- list( pers.green , pers.blue, pers.red,
pers.gray, pers.orange, pers.beige
)
################################################################################
################################################################################
top   <- read.csv('top10.csv',header = TRUE)
N01   <- nrow(top)
M01   <- ncol(top)
rownames(top) <- top[,1]
colnames(top) <- c('NONE','nothing','gold','platinum','rowsum')
top5 <- t(as.matrix(tail(top)[,2:(M01-1)]))[1:3,]
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.1,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.7)
text(x = p, y = top5, label = top5, pos = 3, cex = 0.5, col = "black")
legend("topleft",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(pers.gray,pers.blue,pers.green),bty="n")
box()
top5
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.1,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.4)
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.1,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.5)
text(x = p, y = top5, label = top5, pos = 3, cex = 0.5, col = "black")
legend("topleft",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(pers.gray,pers.blue,pers.green),bty="n")
box()
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.1,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.5)
text(x = p, y = top5, label = top5, pos = 3, cex = 0.5, col = "black")
legend("topleft",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(pers.gray,pers.blue,pers.green),bty="n",cex=0.6)
setwd('TeX/Pictures/')
tikz("barchart.tex",width = 3.5, height = 3.5)
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.1,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.5)
text(x = p, y = top5, label = top5, pos = 3, cex = 0.5, col = "black")
legend("topleft",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(pers.gray,pers.blue,pers.green),bty="n",cex=0.7)
box()
dev.off()
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.5,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.5)
p <- barplot(top5, col=c(pers.gray,pers.blue,pers.green),beside=TRUE,legend=NULL,
ylim=c(0,25),cex.lab=0.5,cex.axis=0.5,cex.lab=0.5,
mgp=c(0.5,0.1,0),tck=-0.01,cex.names=0.5)
text(x = p, y = top5, label = top5, pos = 3, cex = 0.5, col = "black")
legend("topleft",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(pers.gray,pers.blue,pers.green),bty="n",cex=0.7)
box()
emp <- top[-2,2:4]
none <- temp[,1]
gold <- temp[,2]
################################################################################
temp <- top[-2,2:4]
none <- temp[,1]
gold <- temp[,2]
plat <- temp[,3]
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
box()
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1)
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
box()
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1), y.intersp = 2)
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
box()
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1), y.intersp = 2)
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1, y.intersp = 2)
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1)
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
box()
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1)
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1)
box()
tikz("powerlaw.tex",width = 3.5, height = 3.5)
hist(none,breaks = 40,col=rgb(0,0,1,1/4),xlim=c(0,23),ylim=c(0,400),
ylab='Artist Frequency',xlab='Number of arwards',main='',cex.lab=0.5,cex.axis=0.5,
mgp=c(1,0.1,0),tck=-0.01)
hist(gold,width=0.33,offset=2,add=TRUE,breaks = 10,col=rgb(1,0,0,1/4))
hist(plat,width=0.33,offset=2,add=TRUE,breaks = 40,col=rgb(0,1,0,1/4))
legend("topright",legend = c("Not awarded", "Gold","Platinum"),pch = c(15, 15, 15),
pt.bg="white",col=c(rgb(0,0,1,1/4),rgb(1,0,0,1/4),rgb(0,1,0,1/4)),bty="n",cex = 0.7,
ncol = 1)
box()
dev.off()
setwd('~/Documents/GSE/Term 3/14D010 Text Mining for Social Sciences/14D010-TextMining-for-Social-Sciences/Project/')
fromJSON(file='rf02.txt', method='C')
nb  <- fromJSON(file='nb02.txt', method='C')
rf  <- fromJSON(file='rf02.txt', method='C')
svm <- fromJSON(file='svm02.txt', method='C')
ada <- fromJSON(file='ada02.txt', method='C')
knn <- fromJSON(file='knn02.txt', method='C')
seq <- fromJSON(file='seq.txt', method='C')
seq
if (!require("stargazer"))    install.packages("stargazer");    library(stargazer)
rbind(nb,knn,svm,ada,rf)
df <- cbind(rbind(nb,knn,svm,ada,rf),0)
df
cnames <- c(seq[,-1],"Full Model")
cnames <- c(seq[,-1],"Full Model")
cnames <- c(seq[-1],"Full Model")
rownames(df) <- rnames
rnames <- c('Naive Bayes','K-NN','SVM','ADA-Boost','Random Forest')
cnames <- c(seq[-1],"Full Model")
colnames(df) <- cnames
cnames <- c(seq[-1],"Full Model")
colnames(df) <- cnames
dim(df)
length(cnames)
cnames <- c(seq,"Full Model")
colnames(df) <- cnames
dim(df)
stargazer(df,summary = FALSE,column.sep.width='0pt',font.size='scriptsize',rownames=TRUE,colnames = TRUE)
df
sapply(1:nrow(df),function(i){which.min(df[i,]}))
sapply(1:nrow(df),function(i){which.min(df[i,])})
sapply(1:nrow(df),function(i){which.min(df[i,])}))
sapply(1:nrow(df),function(i){which.min(df[i,])})
sapply(1:nrow(df),function(i){which.min(df[i,])})
df[1,]
class(df)
sapply(1:nrow(df),function(i){which.min(as.data.frame(df[i,]))})
df2 <- as.data.frame(df)
head(df2)
sapply(1:nrow(df),function(i){which.min(df2[i,])})
sapply(1:nrow(df),function(i){which.max(df2[i,])})
df2[1,]
which.max(df2[1,])
which.max(as.numeric(df2[1,]))
as.numeric(df2[1,])
as.numeric(df2[1,])
df2[1,]
as.numeric(df2[2,])
df2
df2[1,]
which.max(df2[1,])
as.numeric(df2[1,])
class(df2[1,])
df2[1,]
as.matrux(df2[1,])
as.matrix(df2[1,])
as.numeric(as.matrix(df2[1,]))
unlist(list(df2[1,]))
as.numeric(unlist(list(df2[1,])))
which.max(as.numeric(unlist(list(df2[1,]))))
df2 <- as.data.frame(df[,-1])
df2
df2 <- as.data.frame(df)[,-1]
df2
df2 <- as.data.frame(df)[,-2]
df2
df2 <- as.data.frame(df)[,1:(ncol(df)-1)]
df2
sapply(1:nrow(df),function(i){which.max(  as.numeric(unlist(list(df2[i,])))) })
df2 <- as.data.frame(df)[,-c(13:17,ncol(df)))]
df2 <- as.data.frame(df)[,-c(13:17,ncol(df))]
df2
stargazer(df2,summary = FALSE,column.sep.width='0pt',font.size='scriptsize',rownames=TRUE,colnames = TRUE)
df2 <- as.data.frame(df)[,-c(13:19,ncol(df))]
stargazer(df2,summary = FALSE,column.sep.width='0pt',font.size='scriptsize',rownames=TRUE,colnames = TRUE)
df2 <- as.data.frame(df)[,-c(2,3,13:19,ncol(df))]
df2
stargazer(df2,summary = FALSE,column.sep.width='0pt',font.size='scriptsize',rownames=TRUE,colnames = TRUE)
18 10  4 10  9
df
